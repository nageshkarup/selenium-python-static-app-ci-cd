name: Deploy and Run Tests Locally

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        browser: [chrome, firefox]
        os: [windows-latest]

    env:
      BROWSER_NAME: ${{ matrix.browser }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3  

    - name: Set up Python (Linux)
      if: runner.os == 'Linux'
      uses: actions/setup-python@v3  
      with:
        python-version: '3.x'

    - name: Set up Python (Windows)
      if: runner.os == 'Windows'
      uses: actions/setup-python@v3  
      with:
        python-version: '3.x'

    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m venv .venv
        .\\.venv\\Scripts\\activate
        pip install -r requirements.txt

    - name: Verify Browser and Driver Paths
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          echo "Checking Chrome and ChromeDriver paths on Linux..."
          which google-chrome || echo "Chrome not found"
          google-chrome --version || echo "Chrome version not found"
          which chromedriver || echo "ChromeDriver not found"
          chromedriver --version || echo "ChromeDriver version not found"
        
          echo "Checking Firefox and GeckoDriver paths on Linux..."
          which firefox || echo "Firefox not found"
          firefox --version || echo "Firefox version not found"
          which geckodriver || echo "GeckoDriver not found"
          geckodriver --version || echo "GeckoDriver version not found"
    
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "Checking Chrome and ChromeDriver paths on Windows..."
          where chrome || echo "Chrome not found, checking default install path"
          echo "Attempting to retrieve Chrome version on Windows..."
          if [ -f "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe" ]; then
            echo "Chrome found at default path"
            powershell -Command "(Get-Item 'C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe').VersionInfo.ProductVersion"
          else
            echo "Chrome not found at default path"
          fi
    
          where chromedriver || echo "ChromeDriver not found"
          chromedriver --version || echo "ChromeDriver version not found"
        
          echo "Checking Firefox and GeckoDriver paths on Windows..."
          where firefox || echo "Firefox not found, checking default install path"
          echo "Attempting to retrieve Firefox version on Windows..."
          if [ -f "C:\\Program Files\\Mozilla Firefox\\firefox.exe" ]; then
            echo "Firefox found at default path"
            powershell -Command "(Get-Item 'C:\\Program Files\\Mozilla Firefox\\firefox.exe').VersionInfo.ProductVersion"
          else
            echo "Firefox not found at default path"
          fi
    
          where geckodriver || echo "GeckoDriver not found"
          geckodriver --version || echo "GeckoDriver version not found"
        fi
      shell: bash
      
    - name: Make script executable (Linux only)
      if: runner.os == 'Linux'
      run: chmod +x run_tests.sh

    - name: Run tests using script (Linux)
      if: runner.os == 'Linux'
      run: ./run_tests.sh

    - name: Run tests using script (Windows)
      if: runner.os == 'Windows'
      run: |
        .\\run_tests.bat
